/* Вначале делаем общие заготовки стилей */
/* border-box - значения padding и border вычитаются из ширины и длины блока  */
html {
    box-sizing: border-box;
}

/* inherit — наследует значение box-sizing от родительского элемента.  */
*, *::before, *::after {
    box-sizing: inherit;
}

/* У всех ссылок <a> убираем подчеркивание text-decoration: none;
   и цвет наследоваться будет от родителя color: inherit;
*/
a {
    text-decoration: none;
    color: inherit;
    display: inline-block;
}

/* Стили для списков
   «list-style:none» это CSS свойство, которое убирает маркеры списка
   (bullet points) у элементов списка. Когда вы устанавливаете
   значение «list-style» в «none», все маркеры списка будут убраны.
   Это может быть полезно, если вы хотите создать список без
   каких-либо маркеров.
   */
ul,
li {
    margin: 0;
    padding: 0;
    list-style: none;
}

/*  Общий стиль для заголовков
  */
h1, h2, h3, h4, h5, h6 {
    margin: 0;
}

p {
    margin: 0;
}

/* Пока для боди укажем только цвет основного текста
  (далее будем свойства добавлять)
  */
body {
    color: #2F3035;
    /* Сделаем шрифты без засечек  */
    font-family: 'SFProDisplay-Regular', sans-serif;
    font-size: 20px;
    /*  Свойство CSS line-height устанавливает величину пространства
     между строками, например в тексте.
     В блочных элементах оно указывает минимальную высоту
     блоков строк внутри элемента. */
    line-height: 24px;
    /* Вес  шрифта  normal =  400  */
    font-weight: 500;
    /* hidden — содержимое, выходящее за пределы «родительского»
       блока, обрезается по его границам без прокрутки; */
    overflow-x: hidden;
    min-width: 320px;
}

/*  Стили для .container */
.container {
    max-width: 1200px;
    padding: 0 15px;
    margin: 0 auto;
}

/* Сделаем поле вниз для разделения секций page-section */
.page-section {
    margin-bottom: 80px;
}

/* Начинаем задавать стили для header__top-inner  */
.header__top-inner {
    display: flex;
    /* Раздвинем блоки: навигационное меню со списком: Магазины,
     Акции, Доставка и оплата; Блок с Логотипом;
      и блок с Адресом и списком из иконок(Избранное, Профиль, Корзина)
      */
    justify-content: space-between;
    /*  Свойство align - items со значением center совместит
    центры родителя и каждого из элементов.
    Работа этого свойства похожа на работу vertical - align
    для строчно-блочных элементов.
    Напомним, что поперечная ось всегда идёт перпендикулярно
    основной оси. Если флекс-элементы выстроены в ряд,
    то align - items управляет выравниванием по вертикали.
    */
    align-items: center;
    /* Высоту верхнего хедера надо стараться не указывать(по опыту поколений),
    но минимальную указать можно.
     */
    min-height: 122px;
    /* Пропишем  установленные шрифты где нужно Bold, Medium и т.д.
       и соответствующий  вес  шрифта font-weight: */
    font-family: 'SFProDisplay-Bold', sans-serif;
    font-weight: 700;
}

.menu__item {
    /* Расположим Магазины, Акции, Доставка и оплата в линию  */
    display: inline-block;
}

/* Способ указать отступ между элементами меню.
   Ищет первый элемент списка плюс второй элемент
   (его сосед справа) и слева от второго элемента добавляет отступ 50px,
   далее ищет следующий (третий и т.д.) элемент и т.д.
    Типа цикла.
    */
.menu__item + .menu__item {
    padding-left: 50px;
}

/* Расставляем и стилизуем правый блок хедер-бокс  */
.header__box {
    display: flex;
}

/* Кнопка меню три полоски (сэндвич) в
   деск-топ версии не показывается, но
   должно появляться в мобильной версии*/
.menu__btn {
    display: none;
}

.header__address {
    margin-right: 60px;
    width: 265px;
    padding-left: 30px;
    position: relative;
}

/* Перед  адресом вставим иконку */
.header__address::before {
    /*  Css - свойство content (от англ. content– содержимое)
    предназначено для вставки генерируемого контента,
    который первоначально в тексте веб-страницы отсутствует.
    Свойство используется совместно с псевдоэлементами:: after
    и:: before, которые, соответственно, указывают, куда следует
    вставлять контент – до или после указанного в селекторе элемента. */
    content: url('../images/pin_local_address_lite_30px.svg');
    position: absolute;
    /*  Свойство background-image устанавливает фоновое
    изображение для элемента. */
    /*background-image: url('../images/pin_local_address_lite_30px.svg');
    width: 30px;
    height: 30px; */
    left: 0;
    top: -10px;
}

/* Стили для мобильного меню сэндвич */
/* Блок меню */
.menu-mobile__list {
    width: 243px;
    box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.15);
    /* Сэндвич меню прячется влево когда не активно */
    transform: translateX(-100%);
    transition: all .3s;
    position: absolute;
    z-index: 10;
    background-color: #fff;
}

/* Нижний мобильный хедер не видим  */
.menu__mobile-linewrapper {
    display: none;
}

.menu-mobile__list--active {
    /* Сэндвич меню появляется когда активно */
    transform: translateX(0%);
}

/* Для элементов меню */
.menu-mobile__item {
    /* relative — элемент позиционируется относительно своего
       исходного положения в потоке документа; */
    position: relative;
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

/* Для заголовков ссылок меню */
.menu-mobile__link {
    display: block;
    padding-left: 53px;
    padding-top: 36px;
}

/* Для иконок */
.menu-mobile__img {
    position: absolute;
    left: 11px;
    bottom: 0;
}

/*  Стилизуем .user-list  и  .user-list__item */
.user-list {
    /* Отступ от правого края  */
    margin-right: 15px;
    display: flex;
    align-items: center;
}

.user-list__item {
    /* Расстояние между иконками  */
    padding-right: 10px;
}

/* Добавляем иконку для количества товаров в корзине  */
.cart {
    /* Иконка для количества товаров в корзине позиционируется относительно
   Родительской иконки корзины  */
    position: relative;
}

.cart__num {
    /* Иконка для количества товаров в корзине при absolute
   Выпадает из общего потока и позиционируется сама по себе
   Относительно окна браузера.  */
    position: absolute;
    font-family: 'SFProDisplay-Medium', sans-serif;
    font-weight: 500;
    color: #fff;
    /* Размер шрифта в иконке для количества товаров в корзине  */
    font-size: 14px;
    /* Свойство CSS line-height устанавливает величину пространства между строками */
    line-height: 20px;
    /* Размер иконки для количества товаров в корзине  */
    width: 20px;
    height: 20px;
    /* Цвет иконки для количества товаров в корзине  */
    background-color: #1C62CD;
    /* Делаем иконку для количества товаров в корзине круглой  */
    border-radius: 50%;
    /* Центрируем число в иконке для количества товаров в корзине  */
    text-align: center;
    /* Позиционируем иконку для количества товаров в корзине относительно иконки корзины */
    bottom: -6px;
    right: -20px;
}

/* Для Блока Див  class =”menu__bottom” добавим  отступ  78px в Css  */
.header__bottom {
    margin-bottom: 80px;
}

/* Див с class="header__top-inner" не нужен
   (полезной нагрузки не несет) удаляем в html
    остается class="menu-categories" */
/* Сделаем  серый   фон  для  Нижнего  хедера   в   Css.  */
.menu-categories {
    background-color: #F0F0F4;
    display: flex;
    justify-content: space-around;
    align-items: center;
    min-height: 53px;
}

/* Делаем анимацию нижнего меню категорий товаров.
  При наведении на элемент меню, меняется вес шрифта и элемент подчеркивается*/
.menu-categories__item {
    position: relative;
}

.menu-categories__link {
    /* Transition позволяет определять переходное состояние между двумя состояниями элемента.  */
    transition: all .5s;
    font-weight: 400;
    padding: 15px 0 14px;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.menu-categories__link::before {
    content: "";
    position: absolute;
    width: 0;
    left: auto;
    right: 0;
    background-color: #1C62CD;
    height: 3px;
    bottom: -2px;
    transition: all .3s;
}

.menu-categories__link:hover {
    font-family: 'SFProDisplay-Semibold', sans-serif;
    font-weight: 600;
    color: #000;
}

.menu-categories__link:hover::before {
    width: 100%;
    right: auto;
    left: 0;
}

/* Вначале для родителя секции баннер banner-section__inner
   разложим все элементы секции баннер*/
.banner-section__inner {
    display: flex;
    justify-content: space-between;
}

/* Для окна слайдера зададим максимальную ширину блока */
.banner-section__slider {
    max-width: 870px;
}

/* В окно слайдера баннера поместим стрелки */
/* Такие же стили применим и для стрелок слайдера С.Т. */
.banner-section__slider-btn,
.products__slider-btn {
    /* Стрелки позиционироваться будет от верха-лева окна слайдера
    и не будет привязана к слайдеру т.е. будет стоять на месте */
    position: absolute;
    /* Верх стрелки сдвинем вниз на 50% от верха окна слайдера */
    top: 50%;
    /* И еще поднимем стрелку вверх (ось Y) на 50% от высоты самой стрелки
       тогда центр стрелки будет по центру окна слайдера */
    transform: translateY(-50%);
    /* Удалим все обрамления и поля у кнопки со стрелкой
       останется только изображение стрелки */
    background-color: transparent;
    border: none;
    margin: 0;
    padding: 0;
    /* Левая стрелка спряталась под слайд. Вытащим при помощи z-index */
    z-index: 5;
    cursor: pointer;
}

/* Отступ левой стрелки баннера от левого края 20px */
.banner-section__slider-btnprev {
    left: 20px;
}

/* Отступ правой стрелки баннера от правого края 20px */
.banner-section__slider-btnnext {
    right: 20px;
}

/* Отступ левой стрелки С.Т. от левого края 20px */
.products__slider-btnprev {
    left: -40px;
}

/* Отступ правой стрелки С.Т. от правого края 20px */
.products__slider-btnnext {
    right: -40px;
}

/* Т.к. слик-слайдер нам сделал кнопки по количеству слайдов
   будем переделывать их на кругляшки с селектором (классом)
   .slick-dots */
/* позиционируем кругляшки относительно  окна  слайдера
 чтобы они оставались на месте */
.slick-dots {
    position: absolute;
    bottom: 40px;
    left: 0;
    right: 0;
    text-align: center;
}

/* разместим кругляшки в линию с шагом 5px */
.slick-dots li {
    display: inline-block;
    padding: 0 5px;
}

/* рисуем кругляшки из квадратных кнопок и делаем их прозрачными*/
.slick-dots button {
    padding: 0;
    margin: 0;
    font-size: 0;
    width: 11px;
    height: 11px;
    border: 1px solid #fff;
    border-radius: 50%;
    background-color: transparent;
}

/* Активный кругляшок делаем белым  */
.slick-active li button {
    background-color: white;
}

.slick-slide img {
    display: inline;
}

/* Переходим  на  баннер  товара  по  акции */
.sale-item {
    /*  задаем ширину баннера */
    max-width: 265px;
    /* Текст по центру  */
    text-align: center;
    border: 1px solid #CDCDCD;
    border-radius: 3px;
    /* Делаем флекс, меняем ось на вертикальную,
      и распределяем элементы уже по вертикали */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

/* Верхний блок баннера распределим */
.sale-item__top {
    display: flex;
    justify-content: space-between;
    /* align-items: flex-start; - Свойство выравнивания
       элементов внутри контейнера по поперечной оси.
       flex-start — элементы выстраиваются у начала поперечной оси. */
    align-items: flex-start;
}

/* Стилизуем Акцию  */
.sale-item__info {
    color: #fff;
    background-color: #1C62CD;
    padding: 8px 20px;
    /* Свойство text-transform изменяет регистр текста.
    Оно может принимать следующие значения:
capitalize: делает первую букву слова заглавной
uppercase: все слово переводится в верхний регистр
lowercase: все слово переводится в нижний регистр
none: регистр символов слова никак не изменяется  */
    text-transform: uppercase;
    font-size: 12px;
    line-height: 15px;
    /*     letter-spacing: Определяет интервал между символами в пределах элемента.
    Браузеры обычно устанавливают расстояние между символами,
    исходя из типа и вида шрифта, его размеров и настроек операционной системы.
    Чтобы изменить это значение и применяется данное свойство.
    Допустимо использовать отрицательное значение,
    но в этом случае надо убедиться, что сохраняется читабельность текста.  */
    letter-spacing: 0.1em;
}

/* text-align. Выравниваем текст по левому или правому краю. А может и по центру.  */
.sale-item__price {
    text-align: right;
}

/* Применим подключенный  шрифт  Barlow  для  всех  цен  в проекте  */
.price {
    font-family: 'Barlow', sans-serif;
    position: relative;
}

/*  Стиль новой цены */
.sale-item__price-new {
    font-weight: 700;
    font-size: 27px;
    color: #1C62CD;
    line-height: 32px;
    margin-right: 6px;
    padding-right: 30px;
}

/* Добавляем иконку Рубля в конец цены */
.sale-item__price-new::after {
    content: "";
    background-image: url('../images/ruble_bold_20x20_blue.svg');
    /* Свойства top, left, right и bottom используются для указания
    точного положения позиционированного элемента.  */
    position: absolute;
    right: 5px;
    top: 8px;
    width: 18px;
    height: 18px;
}

/*  Стиль старой цены */
.sale-item__price-old {
    font-weight: 400;
    font-size: 18px;
    line-height: 17px;
    color: #C4C4C4;
    margin-right: 25px;
}

/* Добавляем иконку Рубля в конец старой цены */
.sale-item__price-old::after {
    content: "";
    background-image: url('../images/ruble_bold_10x15_gray.svg');
    /* Свойства top, left, right и bottom используются для указания
    точного положения позиционированного элемента.  */
    position: absolute;
    right: -10px;
    top: -1px;
    width: 14px;
    height: 20px;
}

/* Делаем старую цену перечеркнутой красной линией  */
del {
    text-decoration: line-through;
    text-decoration-color: red;
}

/* Стилизуем футер баннера  */
.sale-item__footer {
    background-color: #F0F0F4;
    padding: 25px 20px;
    font-size: 18px;
    line-height: 21px;
}

/* Стилизуем span в футере */
.sale-item__footer span {
    color: #1C62CD;
    /*  Display: block означает, что элемент отображается как блок,
        как всегда отображались абзацы и заголовки.
        Блок имеет несколько пробелов над и под ним и не допускает
        никаких HTML-элементов рядом с ним, за исключением случаев,
        когда приказано иначе. */
    display: block;
    font-family: 'Barlow', sans-serif;
    font-weight: 700;
}

/*  Стилизуем наименование товара по акции (лодочный мотор) */
.sale-item__title {
    font-size: 18px;
    line-height: 21px;
    font-family: 'SFProDisplay-Bold', sans-serif;
    font-weight: 700;
    margin-bottom: 7px;
}

/* Масштабируем размер картинки слайдера под размер блока слайдера  */
.banner-section__slider-img {
    /* cover - Элемент увеличивается или уменьшается (обрезается), чтобы
       целиком заполнить заданную область с сохранением пропорций.  */
    object-fit: cover;
    min-height: 400px;
}

/* Масштабируем размер картинки лодочного мотора под размер блока баннера */
.sale-item__img {
    /* contain - Элемент масштабируется, чтобы целиком уместиться
       в заданные размеры с соблюдением пропорций. */
    object-fit: contain;
}

/* Стилизуем секцию поиск search  */
/* Зададим поле вниз от табов  */
.search__tabs {
    margin-bottom: 25px;
}

/* Зададим отступы для табов поиска По номеру, По марке, По названию */
.search__tabs-item {
    padding: 11px 26px 12px;
}

/* Зададим обрамление для активных табов  */
.search__tabs-item.tab--active {
    border-radius: 5px;
    background: #F0F0F4;
    font-weight: 700;
    font-family: 'SFProDisplay-Bold', sans-serif;
}

/* Спрячем три наших инпута  */
.tabs-content {
    /*  При использовании свойства display: none элемент становится
    невидимым и, Кроме того, недоступным для средств чтения с экрана. */
    display: none;
}

/* Покажем только активный инпут  */
.tabs-content.tabs-content--active {
    display: block;
}

/* Задаем флекс для форм */
.search__content-form {
    /* Свойство display: flex.
CSS-правило предназначено для выстраивания flexbox-сетки,
которая строится из дочерних html-тэгов, расположенных внутри
некоторого родительского контейнера. Для задания данной сетки
необходимо установить правило display в значение:
display: flex; — для блокового отображения;
display: inline-flex; — для строчного отображения. */
    display: flex;
}

/* Стилизуем инпут */
.search__content-input {
    background: #F0F0F4;
    border-radius: 3px;
    padding: 5px 20px;
    border: none;
    line-height: 19px;
    font-size: 16px;
    width: 100%;
}

/* Зададим цвет плейсхолдеру */
.search__content-input::placeholder {
    color: #656464;
}

/* Стилизуем кнопку Искать  */
.search__content-btn {
    font-weight: bold;
    font-size: 14px;
    line-height: 17px;
    letter-spacing: 0.12em;
    text-transform: uppercase;
    color: #fff;
    font-family: 'SFProDisplay-Bold', sans-serif;
    background: #1C62CD;
    border-radius: 3px;
    padding: 17px 40px;
    /* Уберем рамку у кнопки  */
    border: none;
    /* Сдвинем кнопку Искать влево наезжая на инпут */
    margin-left: -3px;
}

/* Стилизуем секцию категории товаров  */
.categories__inner {
    display: flex;
    justify-content: space-between;
    /* CSS свойство flex-wrap определяет будут ли
    flex-элементы выстраиваться в одну строку или
    возможно многострочное размещение.
    Если многострочное расположение разрешено,
    то свойство позволяет задавать и направление
    расположения flex-элементов.
    Примечание: если элемент не является
    flex-контейнером (display: flex), свойство flex-wrap
    будет проигнорировано. Значение по умолчанию: nowrap.  */
    flex-wrap: wrap;
}

.categories__item {
    /* Отделим верхний ряд окошек от нижнего на 30px */
    margin-bottom: 30px;
    border: 1px solid #CDCDCD;
    border-radius: 3px;
    width: 370px;
    display: flex;
    padding: 20px 20px 16px;
    justify-content: space-between;
    /* Этот транзишин будет плавно влиять на появление тени */
    transition: all .3s;
}

/* Добавим появление тени у окошек*/
.categories__item:hover {
    box-shadow: 3px 3px 20px rgba(50, 50, 50, 0.5);
}

/* Пускай название категории занимает половину окошка */
.categories__item-info {
    width: 50%;
    /* Растащим название категории и "Подробнее"
     по вертикали  */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

/* Пускай картинка разместится посередине половинки окошка  */
.categories__item-img {
    text-align: center;
    width: 50%;
}

/*  Чтобы лодка не вылазила справа для картинок
    зададим max-width:100%;
    Если к изображению применить свойство max-width: 100%
    оно останется в границах родительского элемента,
    даже при том, что его изначальный размер больше.
    Если же изображение изначально меньше родителя,
    данное свойство никак на него не повлияет.*/
.categories__item-img img {
    max-width: 100%;
}

/*  Стилизуем названия категорий и текста "Подробнее" */
.categories__item-title {
    font-weight: bold;
    font-size: 24px;
    /* С помощью line-height можно выбрать, насколько
    большое расстояние будет между строчками текста.
    Обычно это расстояние немного больше,
    чем высота шрифта.  */
    line-height: 28px;
    font-family: 'Barlow', sans-serif;
    /*  Свойство transition используется, когда нам нужно
     плавно изменить CSS-свойства между двумя состояниями
     элемента. Например, при наведении мышкой. */
    transition: all .3s;
}

/* Сделаем ховер в окошках категорий для
   элемента "название категории" (title)
    чтобы название меняло цвет */
.categories__item:hover .categories__item-title {
    color: #1C62CD;
}


/* Текст "Подробнее"  */
.categories__item-text {
    font-size: 14px;
    line-height: 17px;
    color: #C4C4C4;
}

/* стрелочка для Подробнее */
.categories__item-text::after {
    /* Добавляет контент стрелка >  */
    content: '>';
    padding-left: 2px;
}

/* Стилизуем сопутствующие товары */
.product-item__wrapper {
    /* position: relative; будет здесь у обертки,
       а не у .product-item */
    position: relative;
    width: 271px;
    transition: all .3s;
}

/* Если у класса .product-item__wrapper одновременно
   появляется класс .product-item__wrapper--list то
   товар выстраивается в список, т.е. width: 100%; */
.product-item__wrapper.product-item__wrapper--list {
    width: 100%;
}

/* Делаю ссылочное окно для сопутствующего товара для 1 шт */
.product-item {
    min-height: 400px;
    width: 100%;
    border: 1px solid #CDCDCD;
    border-radius: 3px;
    text-align: center;
    padding: 50px 20px 40px;
    /* Тут транзишн для плавного появления тени при ховере */
    transition: all .3s;
}

/* Название товара */
.product-item__title {
    font-weight: bold;
    padding: 14px 0 12px;
    font-size: 18px;
    line-height: 21px;
}

/* Делаю поле для Иконки Избранное */
.product-item__favorite {
    position: absolute;
    top: 16px;
    right: 19px;
    width: 24px;
    height: 22px;
    background-color: transparent;
    border: none;
    z-index: 5;
}

/* Добавил иконку Избранное (сердечко пустое) */
.product-item__favorite::before {
    content: "";
    position: absolute;
    background-image: url('../images/love_included_off_30x30.svg');
    width: 30px;
    height: 30px;
    top: 0;
    left: 0;
}

/* Добавил иконку Избранное (сердечко полное синее) */
.product-item__favorite--active::before {
    background-image: url('../images/love_included_on_30x30_blue.svg');
}

/* Стилизуем цену товара */
.product-item__price {
    font-weight: bold;
    font-size: 30px;
    line-height: 36px;
}

/* Добавляем иконку Рубля в конец цены */
.product-item__price::after {
    content: "";
    background-image: url('../images/ruble_bold_20x20_blue.svg');
    /* Свойства top, left, right и bottom используются для указания
    точного положения позиционированного элемента.  */
    position: absolute;
    right: 5px;
    top: 8px;
    width: 18px;
    height: 18px;
}

/* Позиционирую кнопку Корзина */
.product-item__cart {
    position: absolute;
    width: 60px;
    height: 40px;
    background: #1C62CD;
    border-radius: 10px 0 0 0;
    border: none;
    bottom: 0;
    right: 0;
    /* CSS свойство cursor pointer задает курсор при наведении
       на объект, указывающий на то, что он является ссылкой
       или активным элементом. Это свойство может быть
       применено к любому элементу веб-страницы,
       включая текст, картинки, кнопки и т.д. */
    cursor: pointer;
}

/* Добавляем параметры для ховер для товара */
.product-item__hover-text {
    padding: 18px 21px;
    background-color: rgba(255, 255, 255, .9);
    box-shadow: 0 0 15px rgba(20, 0, 80, .6);
    border-radius: 3px;
    display: inline-block;
    position: absolute;
    top: 30%;
    /* opacity: 0; - Прозрачный */
    opacity: 0;
    transition: all .3s;
}

/* При этом ховере меняется прозрачность у .product-item__hover-text */
.product-item:hover .product-item__hover-text {
    /* opacity: 1; - Не прозрачный */
    opacity: 1;
    color: #2F3035;
}

/* При этом ховере появляется тень у всего окна .product-item */
.product-item:hover {
    box-shadow: 3px 3px 20px rgba(20, 0, 80, .6);
    color: #1C62CD;
}

/* Сообщение об отсутствии товара черное */
.product-item:hover .product-item__notify-text {
    color: #2F3035;
}

/* Добавляю иконку SALE */
.product-item--sale::before {
    content: 'SALE';
    padding: 8px 15px;
    background-color: #1C62CD;
    position: absolute;
    left: 0;
    top: 0;
    text-transform: uppercase;
    color: #fff;
    font-size: 12px;
    line-height: 14px;
    letter-spacing: 0.07em;
}

/* Чтобы на странице появлялись уведомления, что товара
   нет в наличии */
/* Перевод: если у класса wrapper появляется класс
   .product-item__not-available (нет в наличии),
   то класс .product-item__price (цена товара) со страницы
   исчезает display: none;  */
.product-item__wrapper.product-item__not-available .product-item__price {
    display: none;
}

/* Класс .product-item__notify-text (текст уведомления)
   по умолчанию имеет состояние display: none; */
.product-item__notify-text {
    display: none;
    font-size: 18px;
    line-height: 21px;
    font-weight: 700;
}

/* Так же исчезает корзина и окна товара при отсутствии товара */
.product-item__wrapper.product-item__not-available .product-item__cart {
    display: none;
}

/* Перевод: если у класса wrapper появляется класс
   .product-item__not-available (нет в наличии),
   то у класса .product-item__notify-text появляется
    свойство display: block;  */
.product-item__wrapper.product-item__not-available .product-item__notify-text {
    display: block;
}

/* По умолчанию ссылки нет */
.product-item__notify-link {
    display: none;
}

.product-item__wrapper.product-item__not-available .product-item__title {
    padding-bottom: 13px;
}

/* При таком условии ссылка появляется */
.product-item__wrapper.product-item__not-available .product-item__notify-link {
    display: block;
    position: absolute;
    bottom: 20px;
    left: 0;
    right: 0;
    font-size: 16px;
    line-height: 19px;
    text-align: center;
    color: #1C62CD;
}

.product-item__wrapper.product-item__not-available .product-item__notify-link span {
    border-bottom: 1px solid #1C62CD;
}

/* Делаем заголовок секции Сопутствующие товары (С.Т.) */
.product__title {
    font-weight: bold;
    font-size: 25px;
    line-height: 30px;
    font-family: 'Barlow', sans-serif;
    margin-bottom: 25px;
}

/* Расставим табы в секции С.Т. через 50px */
.products__tab + .products__tab {
    margin-left: 50px;
}

/* Отступ вниз у родителя табов для всех табов */
.products__tabs {
    padding-bottom: 25px;
}

/* Отступ вниз у дочерних табов для каждого таба */
.products__tab {
    margin-bottom: 5px;
}

/* Подчеркивание табов
   Если таб активный, т.е класс .product__tab
   одновременно имеет класс .tab__active */
.products__tab.tab--active {
    border-bottom: 2px solid #1C62CD;
}

/* Добавил селектор для секции  */
.products {
    margin-bottom: 80px;
}

/* Ставим кнопку Показать еще  по центру */
.product__more {
    text-align: center;
    margin: 35px 0 0;
}

/* Стилизуем кнопку Показать еще */
.product__more-link {
    line-height: 18px;
    letter-spacing: 0.12em;
    font-size: 15px;
    text-transform: uppercase;
    background: #F0F0F4;
    padding: 16px 43px;
}

/* Позиционируем баннер */
.banner {
    margin-bottom: 80px;
}

/* Стили для футера */
.footer {
    background-color: #F0F0F4;
}

.footer__top {
    padding-top: 43px;
}

.footer__top-inner {
    display: flex;
    justify-content: space-between;
}

/* Ширина блока для двух классов */
.footer__top-newsletter.footer__top-item {
    width: 295px;
    margin-right: 50px;
}

.footer__top-title {
    font-weight: bold;
    font-size: 14px;
    line-height: 17px;
}

.footer-form {
    margin-top: 34px;
    display: flex;
    justify-content: space-between;
}

.footer-form__input {
    background-color: #fff;
    border: none;
    line-height: 17px;
    font-size: 14px;
    padding: 0 12px;
}

.footer-form__input::placeholder {
    color: #C4C4C4;
}

.footer-form__btn {
    text-transform: uppercase;
    padding: 10px 16px;
    border: none;
    background-color: #1C62CD;
    color: #fff;
    font-weight: 600;
    font-size: 11px;
    line-height: 13px;
    letter-spacing: 0.12em;
    font-family: 'SFProDisplay-Semibold', sans-serif;
}

.footer__top-item {
    width: 200px;
}

.footer-list {
    font-size: 14px;
    line-height: 22px;
}

/* Ширина блока для двух классов */
.footer__top-social.footer__top-item {
    width: 250px;
}

.social-list {
    display: flex;
    align-items: center;
    height: 100%;
}

.social-list__item + .social-list__item {
    margin-left: 30px;
}

.footer__bottom {
    padding: 46px 0 22px;
    display: flex;
    justify-content: center;
}

.footer__bottom-link {
    line-height: 12px;
    color: #48494D;
    font-size: 10px;
    margin: 0 40px;
}

/* Стили для Хлебных крошек */
.breadcrumbs {
    margin-bottom: 40px;
}

/* Стиль для лишек (li) */
.breadcrumbs__list-item {
    display: inline-block;
    padding-right: 16px;
    margin-right: 10px;
    position: relative;
    line-height: 18px;
    font-size: 15px;
    color: #C4C4C4;
}

/* Вставляем стрелку */
.breadcrumbs__list-item::after {
    content: "";
    position: absolute;
    right: 0;
    background-image: url('../images/link-arrow_right_15_gray.png');
    width: 12px;
    height: 12px;
    bottom: 5px;
}

/* Уберем стрелку у последней лишки (li) */
.breadcrumbs__list-item:last-child::after {
    display: none;
}

/* Стили Каталога */
.catalog {
    margin-bottom: 100px;
}

.catalog__title {
    font-weight: bold;
    font-family: 'SFProDisplay-Bold', sans-serif;
    font-size: 30px;
    line-height: 36px;
    margin-bottom: 26px;
}

.catalog__filter {
    display: flex;
    justify-content: space-between;
    margin-bottom: 50px;
}

/* Стили для кнопок под заголовком каталога */
.catalog__filter-items button {
    font-size: 14px;
    line-height: 17px;
    opacity: 0.7;
    background: #F0F0F4;
    border-radius: 3px;
    border: none;
    padding: 5px 22px;
    /* cursor pointer - это появление
      руки при наведении на элемент */
    cursor: pointer;
}

.catalog__filter-items button + button {
    margin-left: 8px;
}

/* Родитель кнопок в каталоге товаров */
.catalog__filter-btn {
    display: flex;
    align-items: center;
}

.catalog__filter-btn button {
    background-color: transparent;
    border: none;
    cursor: pointer;
    margin: 0;
    padding: 0;
}

.catalog__filter-btn button + button {
    margin-left: 10px;
}

button.catalog__filter-btngrid {
    width: 20px;
    height: 20px;
}

button.catalog__filter-btnline {
    width: 25px;
    height: 19px;
}

/* Неактивные кнопки полупрозрачные */
.catalog__filter-button {
    opacity: 0.3;
    outline: none;
}

/* Активные кнопки НЕ прозрачные */
.catalog__filter-button--active {
    opacity: 1;
}

.select-item {
    border: 1px solid #D7D9DF;
    font-size: 14px;
    line-height: 17px;
    margin-right: 34px;
    padding: 7px 10px 7px 20px;
}

.catalog__inner {
    display: flex;
}

/* Ширина и поле справа у бокового левого блока */
.catalog__inner-aside {
    min-width: 290px;
    margin-right: 10px;
}

.catalog__inner-list {
    display: flex;
    justify-content: space-between;
    /* Свойство flex-wrap задает многострочную расстановку
       блоков по главной оси.
       Применяется к родительскому элементу для flex блоков.
       Однострочный режим - блоки выстраиваются в одну строку. wrap.
       Блоки выстраиваются в несколько строк, если не помещаются в одну.*/
    flex-wrap: wrap;
}

.catalog__inner-list .product-item__wrapper {
    margin-bottom: 30px;
}

/* Адаптируем размер картинки под размер блока */
.product-item__img {
    max-width: 100%;
}

/* Стили пагинации */
.pagination {
    /* Ограничиваем размер блока (родитель aside) */
    width: 100%;
    margin-top: 70px;
}

.pagination-list {
    display: flex;
    justify-content: center;
}

/* Цвет номера страницы без рамки для НЕ активной ссылки */
.pagination-list__item {
    padding: 6px 12px;
    border: 3px solid transparent;
    margin: 0 4px;
    line-height: 22px;
    font-size: 18px;
    color: #C4C4C4;
}

/* Цвет номера страницы и рамка для активной ссылки */
.pagination-list__item.active {
    border: 3px solid #1C62CD;
    color: #1C62CD;
}

/* для ссылок номера страниц */
.pagination-list__item a {
    display: block;
}

/* Стили боковой  панели aside */
/* Стили для табов */
.aside-filter__tabs {
    display: flex;
    justify-content: space-between;
}

/* Для одного таба */
.aside-filter__tab {
    font-weight: 400;
    font-size: 16px;
    line-height: 19px;
    letter-spacing: 0.09em;
    text-transform: uppercase;
    color: #C4C4C4;
    width: 50%;
}

/* Если .aside-filter__tab  вместе с .tab--active то: */
/* У активного таба меняется шрифт */
.aside-filter__tab.tab--active {
    color: #2F3035;
    font-weight: bold;
    font-family: 'SFProDisplay-Bold', sans-serif;
}

/* Подчеркивание активного таба */
.aside-filter__tab.tab--active span {
    display: inline-block;
    padding-bottom: 7px;
    border-bottom: 2px solid #1C62CD;
}

/* Стилизуем дроп-меню - лишки в списке ul в form */
.aside-filter__item-drop {
    margin: 40px 0;
}

.aside-filter__item-title {
    font-family: 'SFProDisplay-Semibold', sans-serif;
    font-weight: 600;
    font-size: 16px;
    line-height: 19px;
    padding-left: 26px;
}

.filter__item-drop {
    position: relative;
    cursor: pointer;
}

/* Добавляем стрелку вниз для дроп-меню */
.filter__item-drop::before {
    content: '';
    background-image: url('../images/arrow-drop-down-15.png');
    position: absolute;
    left: 0;
    bottom: 4px;
    width: 15px;
    height: 15px;
    transform: rotate(0deg);
}

/* Разворачиваем стрелку дроп-меню когда активируется */
.filter__item-drop--active::before {
    transform: rotate(180deg);
}

/* Позиционируем и стилизуем чекбоксы и лейблы*/
.aside-filter__content {
    display: flex;
    flex-wrap: wrap;
    margin-top: 10px;
}

.aside-filter__content-box {
    width: 50%;
    margin-bottom: 10px;
}

.aside-filter__content-label {
    font-size: 14px;
    cursor: pointer;
    line-height: 17px;
}

/* Размеры и позиционирование чекбоксов и радиокнопок */
/* Эти классы нам добавил jquery.formstyler.min.js  */
.jq-checkbox, .jq-radio {
    background: #fff;
    width: 14px;
    height: 14px;
    border: 1px solid #C4C4C4;
    border-radius: 1px;
    box-shadow: none;
    vertical-align: -2px;
    margin: 0 8px 0 0;
}

/* Фон для чекбокса */
.jq-checkbox.checked, .jq-radio.checked {
    background: #1C62CD;
    border: none;
}

.jq-checkbox.checked .jq-checkbox__div {
    width: 10px;
    height: 10px;
    margin: 2px 0 0 2px;
    border-bottom: none;
    border-left: none;
    transform: rotate(0);
    background-image: url('../images/checked_icon_white.svg');
}

/* Стили для радио-кнопок
   Обнуляем стили которые нам выдал стайлер*/
.jq-radio.checked .jq-radio__div {
    width: 0;
    height: 0;
    margin: 0;
    border-radius: 0;
    background: transparent;
    box-shadow: none;
}

/* Для range-slider зададим ширину. Находим стили в браузере */
.irs--flat {
    width: 100%;
    /* Цены опустим под линию цены */
    margin-top: -15px;
}

.irs--flat .irs-from, .irs--flat .irs-to, .irs--flat .irs-single {
    display: none;
}

.irs--flat .irs-min, .irs--flat .irs-max {
    top: 55px;
    padding: 0;
    line-height: 17px;
    text-decoration: underline;
    font-size: 14px;
    color: #2F3035;
    font-family: 'Barlow', sans-serif;
    text-shadow: none;
    background-color: transparent;
    border-radius: 0;
    padding-left: 27px;
    /* Насильно делаем видимым */
    visibility: visible !important;
}

/* Параметры цены от и цены до */
.irs-min::before,
.irs-max::before {
    position: absolute;
    line-height: 17px;
    font-size: 14px;
    text-decoration: none;
    color: #C4C4C4;
    left: 0;
}

/* Делаем вставки от и до */
.irs-min::before {
    content: 'от';
}

.irs-max::before {
    content: 'до';
}

/* Основная ценовая линия */
.irs--flat .irs-line {
    top: 25px;
    height: 1px;
    background-color: #E0E0E0;
    border-radius: 0;
}

/* Делаем линию цены */
.irs--flat .irs-bar {
    top: 25px;
    height: 3px;
    background-color: #1C62CD;
}

/* Делаем кругляшки на линии цены */
.irs--flat .irs-handle {
    top: 22px;
    width: 8px;
    height: 8px;
    background-color: #1C62CD;
    border-radius: 50%;
}

/* Прячем ненужные остатки */
.irs--flat .irs-handle > i:first-child,
.irs--flat .irs-handle.state_hover > i:first-child, .irs--flat .irs-handle:hover > i:first-child {
    background: transparent;
}

/* Блок выбора мощности */
.aside-filter__item-list {
    margin: 46px 0 40px;
}

.filter__item-list {
    padding-top: 34px;
    border-bottom: 2px solid #C4C4C4;
    display: flex;
    justify-content: space-between;
}

.filter__item-listtitle {
    font-family: 'SFProDisplay-Semibold', sans-serif;
    font-weight: 600;
    font-size: 16px;
    line-height: 19px;
    padding-bottom: 14px;
    padding-left: 26px;
}

.filter__item-listselect {
    line-height: 17px;
    font-size: 14px;
    color: #48494D;
    font-family: 'Barlow', sans-serif;
}

/* Копируем и редактируем стили из браузера которые нам
   наворотил стайлер */
.jq-selectbox__select {
    line-height: 17px;
    font-size: 14px;
    color: #48494D;
    font-family: 'Barlow', sans-serif;
    height: 20px;
    padding: 0 25px 0 10px;
    border-radius: 0;
    background: transparent;
    box-shadow: none;
    text-shadow: none;
    border: none;
}

.jq-selectbox__trigger-arrow {
    position: absolute;
    top: 14px;
    right: 12px;
    width: 0;
    height: 0;
    border: none;
}

.jq-selectbox__trigger {
    background-image: url('../images/arrow-drop-down-15.png');
    top: 0;
    right: 5px;
    bottom: 5px;
    width: 15px;
    height: 15px;
    border-left: none;
}

/* Псевдокласс :active используется для выбора активного
   элемента - элемента на который в данный момент
   пользователь кликнул мышкой.
   Стиль для элемента применится и будет работать пока
   удерживается кнопка мыши. */
.jq-selectbox__select:hover,
.jq-selectbox__select:active {
    background: transparent;
    box-shadow: none;
}

.jq-selectbox.focused .jq-selectbox__select {
    border: none;
}

/* Кнопка "Показать еще" */
.filter-more {
    /* Добавил width: 100% чтобы див .filter-more захватил все
       в т.ч. и кнопку и сворачивал все вместе*/
    width: 100%;
}

.filter-more__btn {
    line-height: 17px;
    font-size: 14px;
    color: #1C62CD;
    border: none;
    border-bottom: 1px solid #1C62CD;
    background-color: transparent;
    padding: 0;
    cursor: pointer;
}

/* Добавляем инпут поиск по модели */
.filter-search {
    width: 100%;
    border: 1px solid #E0E0E0;
    height: 30px;
    padding: 0 20px;
    line-height: 14px;
    font-size: 12px;
    margin-top: 10px;
    margin-bottom: 20px;
}

.filter-search::placeholder {
    color: #BDBEC2;
}

/* Стили чекбоксов в фильтре Акции */
/* Для стилей объединяем классы */
.btn-checked .aside-filter__content {
    flex-wrap: nowrap;
    justify-content: space-between;
}

.btn-checked .aside-filter__content-box {
    width: auto;
}

.btn-checked .aside-filter__content-label {
    position: relative;
    font-size: 12px;
    line-height: 14px;
    letter-spacing: 0.07em;
    font-weight: bold;
    color: #C4C4C4;
}

/* Класс чекбоксов из плагина объединил с .btn-checked */
.btn-checked .jq-checkbox {
    height: 25px;
    width: 63px;
    background: #F0F0F4;
    border: none;
}

/* Если чекбокс .checked то цвет меняется */
.btn-checked .jq-checkbox.checked {
    background: #1C62CD;

}

/* Переключение цвета текта в чекбоксе */
/* Общий одноуровневый комбинатор ( ~) разделяет два селектора
   и сопоставляет все итерации второго элемента, которые следуют
   за первым элементом (хотя и не обязательно сразу) и являются
   дочерними элементами одного и того же родительского элемента. */
/*  Тильда ~ применяется когда нет простых решений */
.btn-checked .jq-checkbox.checked ~ .btn-checked__text {
    color: #fff;
}

/*Выпиливаем галочку из чекбокса  */
.btn-checked .jq-checkbox.checked .jq-checkbox__div {
    display: none;
}

/* Позиционируем текст внутри чекбокса */
.btn-checked__text {
    position: absolute;
    top: -7px;
    left: 50%;
    transform: translateX(-57%);
    z-index: 5;
}

/* Стилизуем кнопки завершения фильтров */
/* Кнопка "Выбрать" */
.filter-btn__apply {
    background: #F0F0F4;
    padding: 16px 85px;
    text-transform: uppercase;
    font-size: 15px;
    line-height: 18px;
    letter-spacing: 0.12em;
    color: #BDBEC2;
    border: none;
    cursor: pointer;
    margin-bottom: 15px;
}

/* Изменение цвета в активном состоянии кнопки "Выбрать" */
.filter-btn__apply--active {
    background-color: #1C62CD;
    color: #fff;
}

/* Центрируем текст в кнопке "Выбрать" */
.aside-filter__item-btn {
    text-align: center;
}

/* Кнопка "Дополнительные параметры" */
.filter__extend {
    font-size: 13px;
    line-height: 16px;
    position: relative;
    padding-right: 29px;
    display: inline-block;
}

/* Добавим стрелочку справа */
.filter__extend::after {
    content: '';
    position: absolute;
    right: 0;
    background-image: url('../images/arrow-drop-down-15.png');
    width: 15px;
    height: 15px;
    top: 1px;
}

/* Спрячем блок more при загрузке страницы
   При клике на кнопку блок more будет появляться */
.filter__extend-content {
    display: none;
}

/* Поворот стрелки при нажатии на кнопку */
.filter__extend.filter__item-drop--active::after {
    transform: rotate(180deg);
}

/*  Кнопка "Сбросить фильтры" */
.filter-btn__reset {
    background-color: transparent;
    padding: 0;
    border: none;
    line-height: 16px;
    display: inline-block;
    border-bottom: 1px solid #C4C4C4;
    font-size: 13px;
}

/* Стилизуем секцию карточка товара */
.product-card {
    margin-bottom: 80px;
}

.product-card__inner {
    display: flex;
    justify-content: space-between;
}

/* Стили для левого блока с фото */
.product-card__img-box {
    width: 500px;
    padding-top: 64px;
    text-align: center;
    font-family: 'Barlow', sans-serif;
    position: relative;
}

/* Стили для ярлыка SALE */
.product-card__img-box::before {
    line-height: 18px;
    font-size: 15px;
    letter-spacing: 0.12em;
    padding: 13px 25px;
    border-radius: 3px;
}

/* Вписываем фото под размер блока */
.product-card__img-box img {
    max-width: 100%;
}

.product-card__price-old {
    line-height: 36px;
    color: #2F3035;
    opacity: 0.6;
    font-size: 30px;
    margin-bottom: 6px;
}

.product-card__price-new {
    font-weight: bold;
    font-size: 40px;
    line-height: 48px;
    margin-bottom: 17px;
}

/* Ссылка "Нашли дешевле?" */
.product-card__link {
    border-bottom: 1px solid #1C62CD;
    font-size: 15px;
    line-height: 18px;
    color: #1C62CD;
}

/* Стили для правого блока с названием товара */
.product-card__content {
    width: 570px;
}

/* Название товара */
.product-card__title {
    font-weight: bold;
    font-size: 30px;
    line-height: 36px;
    font-family: 'SFProDisplay-Bold', sans-serif;
    margin-bottom: 10px;
}

/* Код товара */
.product-card__code {
    font-size: 15px;
    line-height: 18px;
    color: #2F3035;
    opacity: 0.6;
    margin-bottom: 22px;
}

/* Стили иконок */
.product-card__buttons {
    margin-bottom: 50px;
}

/* Табы Характеристики  Наличие в магазине */
.product-card__tab {
    line-height: 24px;
    color: #2F3035;
    opacity: 0.6;
    font-size: 20px;
    padding-bottom: 5px;
    padding-right: 17px;
    margin-bottom: 5px;
}

.product-card__tab + .product-card__tab {
    padding-left: 17px;
}

/* Изменение активных табов */
.product-card__tab.tab--active {
    opacity: 1;
    border-bottom: 2px solid #1C62CD;
    font-weight: bold;
    font-family: 'SFProDisplay-Bold', sans-serif;
}

/* Линии в в списке характеристик */
.product-card__item {
    padding: 15px 0 6px;
    border-bottom: 1px solid rgba(47, 48, 53, 0.1);
    /* Раздвинем характеристики влево и вправо */
    display: flex;
    justify-content: space-between;
}

/* Паддинг для левой части списка
   чтобы не налазило на правую часть */
.product-card__item-left {
    padding-right: 15px;
}

/* Ограничим ширину правой части */
.product-card__item-right {
    width: 125px;
}

/* Ссылка Показать еще */
.product-card__more {
    line-height: 17px;
    color: #1C62CD;
    font-size: 14px;
    border-bottom: 1px solid #1C62CD;
    margin-bottom: 40px;
}

/* Отступ вниз от списка */
.product-card__list {
    margin-bottom: 20px;
}

/* Кнопка Купить */
.product-card__btn button {
    font-size: 14px;
    line-height: 17px;
    letter-spacing: 0.12em;
    text-transform: uppercase;
    color: #FFFFFF;
    padding: 16px 56px;
    background: #1C62CD;
    border-radius: 3px;
    border: none;
    cursor: pointer;
}

/* Стили Иконок */
.product-card__buttons a + a {
    margin-left: 30px;
}

/* Секция табов в карточке товара */
/* Общий Блок табов с формами */
.card__tabs {
    margin-bottom: 100px;
}

/* Блок табов */
.card__tab-box {
    background: #F0F0F4;
    display: flex;
    justify-content: space-around;
    align-items: center;
    padding: 22px 0;
    margin-bottom: 50px;
}

/* Стили табов */
.card__tab {
    line-height: 24px;
    color: #2F3035;
    opacity: 0.8;
    font-size: 20px;
}

.card__tab.tab--active {
    border-bottom: 1px solid #1C62CD;
    opacity: 1;
}

.card__top-line {
    margin-bottom: 10px;
}

.card__label-search {
    line-height: 20px;
    color: rgba(47, 48, 53, 0.7);
    font-size: 17px;
}

/* Инпут поиск */
.card__input-search {
    background: #F0F0F4;
    border-radius: 3px;
    margin-left: 17px;
    padding: 9px 37px 9px 17px;
    border: none;
    margin-right: 100px;
}

/* Радиокнопки */
.card__label-pickup {
    margin-left: 54px;
    line-height: 20px;
    color: rgba(47, 48, 53, .7);
    font-size: 17px;
    cursor: pointer;
}

/* Список магазинов */
.card__list-item {
    padding: 20px 0;
    border-bottom: 1px solid rgba(47, 48, 53, .2);
    display: flex;
    font-size: 16px;
    line-height: 22px;
    color: rgba(47, 48, 53, .7);
}

/* Заголовки списка Адрес, Режим, Доступно и т.д. */
.card__list-itemtitle {
    color: rgb(47, 48, 53);
    font-size: 20px;
    font-weight: 500;
    line-height: 24px;
}

/* Размещение адресов магазинов */
.card__list-address {
    width: 220px;
    margin-right: 80px;
}

/* Размещение Режима работы */
.card__list-workhours {
    width: 157px;
    margin-right: 96px;
}

/* Разметка Режима работы */
.workhours {
    display: flex;
    justify-content: space-between;
}

/* Размещение Доступно */
.card__list-avialable {
    width: 140px;
    margin-right: 60px;
}

/* Размещение Количество */
.card__list-num {
    width: 104px;
}

/* Размещение кнопки Купить */
.card__list-btn {
    margin-left: auto;
}

/* Стили кнопки Купить */
.card__list-btn button {
    line-height: 16px;
    color: #ffffff;
    padding: 9px 40px;
    font-size: 13px;
    text-transform: uppercase;
    background-color: #1C62CD;
    border-radius: 3px;
    border: none;
}